
description = 'DataTable'
dependencies {
  compile project(':datatable-dependencies') {
//      exclude(module: 'jackson-core')
  }
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.3'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version:'1.3'
    testCompile(group: 'org.mockito', name: 'mockito-core', version:'1.10.19') {
exclude(module: 'hamcrest-core')
    }
    testCompile group: 'com.google.guava', name: 'guava', version:'20.0'
    testCompile group: 'io.cucumber', name: 'gherkin', version:'5.0.0'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java'] // change this to point to where your src code lives
        }
    }
}

task translateJava(type:Exec) {
    inputs.files sourceSets.main.allJava
    outputs.files files((sourceSets.main.allJava).collect { i ->
        i.collect { j ->
            def name = projectDir.path + 'src/main/gen/objc/' + i.name
            return [name.replace('.java', '.h'), name.replace('.java', '.m')]
        }
    }.flatten())

    executable "${J2OBJC_HOME_LATEST}/j2objc"
    args '--doc-comments'
    args '--nullability'
//    args '--strip-reflection' // Uncomment this line if the library does not use reflection, search the source for '.reflect'
    args '-d', file('src/main/gen/objc').path
    args '-sourcepath', (sourceSets.main.allJava.srcDirs).join(':')
    args '-classpath', sourceSets.main.runtimeClasspath.collect { it.absolutePath }.join(':')
    args inputs.files
}