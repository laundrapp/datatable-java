//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/datatable/datatable/src/main/java/io/cucumber/datatable/TableEntryTransformer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberDatatableTableEntryTransformer")
#ifdef RESTRICT_IoCucumberDatatableTableEntryTransformer
#define INCLUDE_ALL_IoCucumberDatatableTableEntryTransformer 0
#else
#define INCLUDE_ALL_IoCucumberDatatableTableEntryTransformer 1
#endif
#undef RESTRICT_IoCucumberDatatableTableEntryTransformer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberDatatableTableEntryTransformer_) && (INCLUDE_ALL_IoCucumberDatatableTableEntryTransformer || defined(INCLUDE_IoCucumberDatatableTableEntryTransformer))
#define IoCucumberDatatableTableEntryTransformer_

@protocol JavaUtilMap;

/*!
 @brief Transforms a table entry to in instance of <code>T</code>
 <p>
  A table entry consists of the cells of a row paired
  with the header cells.
 */
@protocol IoCucumberDatatableTableEntryTransformer < JavaObject >

/*!
 @brief Transforms a table entry to in instance of <code>T</code>.
 @param entry_ a single entry
 @return an instance of <code>T</code>
 @throw Throwablewhen the transform fails for any reason
 */
- (id)transformWithJavaUtilMap:(id<JavaUtilMap>)entry_;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberDatatableTableEntryTransformer)

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberDatatableTableEntryTransformer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberDatatableTableEntryTransformer")
