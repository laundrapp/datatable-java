//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/datatable/datatable/src/main/java/io/cucumber/datatable/DuplicateTypeException.java
//

#include "J2ObjC_source.h"
#include "io/cucumber/datatable/CucumberDataTableException.h"
#include "io/cucumber/datatable/DuplicateTypeException.h"

@implementation IoCucumberDatatableDuplicateTypeException

- (instancetype __nonnull)initWithNSString:(NSString *)message {
  IoCucumberDatatableDuplicateTypeException_initWithNSString_(self, message);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _IoCucumberDatatableDuplicateTypeException = { "DuplicateTypeException", "io.cucumber.datatable", ptrTable, methods, NULL, 7, 0x0, 1, 0, -1, -1, -1, -1, -1 };
  return &_IoCucumberDatatableDuplicateTypeException;
}

@end

void IoCucumberDatatableDuplicateTypeException_initWithNSString_(IoCucumberDatatableDuplicateTypeException *self, NSString *message) {
  IoCucumberDatatableCucumberDataTableException_initWithNSString_(self, message);
}

IoCucumberDatatableDuplicateTypeException *new_IoCucumberDatatableDuplicateTypeException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(IoCucumberDatatableDuplicateTypeException, initWithNSString_, message)
}

IoCucumberDatatableDuplicateTypeException *create_IoCucumberDatatableDuplicateTypeException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(IoCucumberDatatableDuplicateTypeException, initWithNSString_, message)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoCucumberDatatableDuplicateTypeException)
