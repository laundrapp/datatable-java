//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/datatable/datatable/src/main/java/io/cucumber/datatable/DataTableTypeRegistry.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "io/cucumber/datatable/DataTableType.h"
#include "io/cucumber/datatable/DataTableTypeRegistry.h"
#include "io/cucumber/datatable/DuplicateTypeException.h"
#include "io/cucumber/datatable/NumberParser.h"
#include "io/cucumber/datatable/TableCellTransformer.h"
#include "io/cucumber/datatable/TypeFactory.h"
#include "java/lang/Byte.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/reflect/Type.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/text/NumberFormat.h"
#include "java/util/HashMap.h"
#include "java/util/Locale.h"

@interface IoCucumberDatatableDataTableTypeRegistry () {
 @public
  JavaUtilHashMap *tableTypeByType_;
}

@end

J2OBJC_FIELD_SETTER(IoCucumberDatatableDataTableTypeRegistry, tableTypeByType_, JavaUtilHashMap *)

@interface IoCucumberDatatableDataTableTypeRegistry_1 : NSObject < IoCucumberDatatableTableCellTransformer >

- (instancetype __nonnull)init;

- (JavaMathBigInteger *)transformWithNSString:(NSString *)cell;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberDatatableDataTableTypeRegistry_1)

__attribute__((unused)) static void IoCucumberDatatableDataTableTypeRegistry_1_init(IoCucumberDatatableDataTableTypeRegistry_1 *self);

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_1 *new_IoCucumberDatatableDataTableTypeRegistry_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_1 *create_IoCucumberDatatableDataTableTypeRegistry_1_init(void);

@interface IoCucumberDatatableDataTableTypeRegistry_2 : NSObject < IoCucumberDatatableTableCellTransformer >

- (instancetype __nonnull)init;

- (JavaMathBigDecimal *)transformWithNSString:(NSString *)cell;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberDatatableDataTableTypeRegistry_2)

__attribute__((unused)) static void IoCucumberDatatableDataTableTypeRegistry_2_init(IoCucumberDatatableDataTableTypeRegistry_2 *self);

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_2 *new_IoCucumberDatatableDataTableTypeRegistry_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_2 *create_IoCucumberDatatableDataTableTypeRegistry_2_init(void);

@interface IoCucumberDatatableDataTableTypeRegistry_3 : NSObject < IoCucumberDatatableTableCellTransformer >

- (instancetype __nonnull)init;

- (JavaLangByte *)transformWithNSString:(NSString *)cell;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberDatatableDataTableTypeRegistry_3)

__attribute__((unused)) static void IoCucumberDatatableDataTableTypeRegistry_3_init(IoCucumberDatatableDataTableTypeRegistry_3 *self);

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_3 *new_IoCucumberDatatableDataTableTypeRegistry_3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_3 *create_IoCucumberDatatableDataTableTypeRegistry_3_init(void);

@interface IoCucumberDatatableDataTableTypeRegistry_4 : NSObject < IoCucumberDatatableTableCellTransformer >

- (instancetype __nonnull)init;

- (JavaLangShort *)transformWithNSString:(NSString *)cell;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberDatatableDataTableTypeRegistry_4)

__attribute__((unused)) static void IoCucumberDatatableDataTableTypeRegistry_4_init(IoCucumberDatatableDataTableTypeRegistry_4 *self);

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_4 *new_IoCucumberDatatableDataTableTypeRegistry_4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_4 *create_IoCucumberDatatableDataTableTypeRegistry_4_init(void);

@interface IoCucumberDatatableDataTableTypeRegistry_5 : NSObject < IoCucumberDatatableTableCellTransformer >

- (instancetype __nonnull)init;

- (JavaLangInteger *)transformWithNSString:(NSString *)cell;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberDatatableDataTableTypeRegistry_5)

__attribute__((unused)) static void IoCucumberDatatableDataTableTypeRegistry_5_init(IoCucumberDatatableDataTableTypeRegistry_5 *self);

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_5 *new_IoCucumberDatatableDataTableTypeRegistry_5_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_5 *create_IoCucumberDatatableDataTableTypeRegistry_5_init(void);

@interface IoCucumberDatatableDataTableTypeRegistry_6 : NSObject < IoCucumberDatatableTableCellTransformer >

- (instancetype __nonnull)init;

- (JavaLangLong *)transformWithNSString:(NSString *)cell;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberDatatableDataTableTypeRegistry_6)

__attribute__((unused)) static void IoCucumberDatatableDataTableTypeRegistry_6_init(IoCucumberDatatableDataTableTypeRegistry_6 *self);

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_6 *new_IoCucumberDatatableDataTableTypeRegistry_6_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_6 *create_IoCucumberDatatableDataTableTypeRegistry_6_init(void);

@interface IoCucumberDatatableDataTableTypeRegistry_7 : NSObject < IoCucumberDatatableTableCellTransformer > {
 @public
  IoCucumberDatatableNumberParser *val$numberParser_;
}

- (instancetype __nonnull)initWithIoCucumberDatatableNumberParser:(IoCucumberDatatableNumberParser *)capture$0;

- (JavaLangFloat *)transformWithNSString:(NSString *)cell;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberDatatableDataTableTypeRegistry_7)

__attribute__((unused)) static void IoCucumberDatatableDataTableTypeRegistry_7_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableDataTableTypeRegistry_7 *self, IoCucumberDatatableNumberParser *capture$0);

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_7 *new_IoCucumberDatatableDataTableTypeRegistry_7_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableNumberParser *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_7 *create_IoCucumberDatatableDataTableTypeRegistry_7_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableNumberParser *capture$0);

@interface IoCucumberDatatableDataTableTypeRegistry_8 : NSObject < IoCucumberDatatableTableCellTransformer > {
 @public
  IoCucumberDatatableNumberParser *val$numberParser_;
}

- (instancetype __nonnull)initWithIoCucumberDatatableNumberParser:(IoCucumberDatatableNumberParser *)capture$0;

- (JavaLangDouble *)transformWithNSString:(NSString *)cell;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberDatatableDataTableTypeRegistry_8)

__attribute__((unused)) static void IoCucumberDatatableDataTableTypeRegistry_8_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableDataTableTypeRegistry_8 *self, IoCucumberDatatableNumberParser *capture$0);

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_8 *new_IoCucumberDatatableDataTableTypeRegistry_8_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableNumberParser *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_8 *create_IoCucumberDatatableDataTableTypeRegistry_8_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableNumberParser *capture$0);

@interface IoCucumberDatatableDataTableTypeRegistry_9 : NSObject < IoCucumberDatatableTableCellTransformer >

- (instancetype __nonnull)init;

- (NSString *)transformWithNSString:(NSString *)cell;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberDatatableDataTableTypeRegistry_9)

__attribute__((unused)) static void IoCucumberDatatableDataTableTypeRegistry_9_init(IoCucumberDatatableDataTableTypeRegistry_9 *self);

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_9 *new_IoCucumberDatatableDataTableTypeRegistry_9_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoCucumberDatatableDataTableTypeRegistry_9 *create_IoCucumberDatatableDataTableTypeRegistry_9_init(void);

@implementation IoCucumberDatatableDataTableTypeRegistry

- (instancetype __nonnull)initWithJavaUtilLocale:(JavaUtilLocale *)locale {
  IoCucumberDatatableDataTableTypeRegistry_initWithJavaUtilLocale_(self, locale);
  return self;
}

- (void)defineDataTableTypeWithIoCucumberDatatableDataTableType:(IoCucumberDatatableDataTableType *)dataTableType {
  IoCucumberDatatableDataTableType *existing = [((JavaUtilHashMap *) nil_chk(tableTypeByType_)) getWithId:[((IoCucumberDatatableDataTableType *) nil_chk(dataTableType)) getTargetType]];
  if (existing != nil) {
    @throw create_IoCucumberDatatableDuplicateTypeException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"There is already a data table type registered for %s.\nIt registered an %s. You are trying to add a %s", [IOSObjectArray arrayWithObjects:(id[]){ [dataTableType getElementType], [((IOSClass *) nil_chk([dataTableType getTransformerType])) getSimpleName], [((IOSClass *) nil_chk([existing getTransformerType])) getSimpleName] } count:3 type:NSObject_class_()]));
  }
  [tableTypeByType_ putWithId:[dataTableType getTargetType] withId:dataTableType];
}

- (IoCucumberDatatableDataTableType *)lookupTableTypeByTypeWithJavaLangReflectType:(id<JavaLangReflectType>)tableType {
  return [((JavaUtilHashMap *) nil_chk(tableTypeByType_)) getWithId:IoCucumberDatatableTypeFactory_constructTypeWithJavaLangReflectType_(tableType)];
}

- (void)dealloc {
  RELEASE_(tableTypeByType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LIoCucumberDatatableDataTableType;", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilLocale:);
  methods[1].selector = @selector(defineDataTableTypeWithIoCucumberDatatableDataTableType:);
  methods[2].selector = @selector(lookupTableTypeByTypeWithJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tableTypeByType_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilLocale;", "defineDataTableType", "LIoCucumberDatatableDataTableType;", "lookupTableTypeByType", "LJavaLangReflectType;", "Ljava/util/HashMap<Lcom/fasterxml/jackson/databind/JavaType;Lio/cucumber/datatable/DataTableType;>;" };
  static const J2ObjcClassInfo _IoCucumberDatatableDataTableTypeRegistry = { "DataTableTypeRegistry", "io.cucumber.datatable", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, -1 };
  return &_IoCucumberDatatableDataTableTypeRegistry;
}

@end

void IoCucumberDatatableDataTableTypeRegistry_initWithJavaUtilLocale_(IoCucumberDatatableDataTableTypeRegistry *self, JavaUtilLocale *locale) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->tableTypeByType_, new_JavaUtilHashMap_init());
  JavaTextNumberFormat *numberFormat = JavaTextNumberFormat_getNumberInstanceWithJavaUtilLocale_(locale);
  IoCucumberDatatableNumberParser *numberParser = create_IoCucumberDatatableNumberParser_initWithJavaTextNumberFormat_(numberFormat);
  [self defineDataTableTypeWithIoCucumberDatatableDataTableType:create_IoCucumberDatatableDataTableType_initWithIOSClass_withIoCucumberDatatableTableCellTransformer_(JavaMathBigInteger_class_(), create_IoCucumberDatatableDataTableTypeRegistry_1_init())];
  [self defineDataTableTypeWithIoCucumberDatatableDataTableType:create_IoCucumberDatatableDataTableType_initWithIOSClass_withIoCucumberDatatableTableCellTransformer_(JavaMathBigDecimal_class_(), create_IoCucumberDatatableDataTableTypeRegistry_2_init())];
  [self defineDataTableTypeWithIoCucumberDatatableDataTableType:create_IoCucumberDatatableDataTableType_initWithIOSClass_withIoCucumberDatatableTableCellTransformer_(JavaLangByte_class_(), create_IoCucumberDatatableDataTableTypeRegistry_3_init())];
  [self defineDataTableTypeWithIoCucumberDatatableDataTableType:create_IoCucumberDatatableDataTableType_initWithIOSClass_withIoCucumberDatatableTableCellTransformer_(JavaLangShort_class_(), create_IoCucumberDatatableDataTableTypeRegistry_4_init())];
  [self defineDataTableTypeWithIoCucumberDatatableDataTableType:create_IoCucumberDatatableDataTableType_initWithIOSClass_withIoCucumberDatatableTableCellTransformer_(JavaLangInteger_class_(), create_IoCucumberDatatableDataTableTypeRegistry_5_init())];
  [self defineDataTableTypeWithIoCucumberDatatableDataTableType:create_IoCucumberDatatableDataTableType_initWithIOSClass_withIoCucumberDatatableTableCellTransformer_(JavaLangLong_class_(), create_IoCucumberDatatableDataTableTypeRegistry_6_init())];
  [self defineDataTableTypeWithIoCucumberDatatableDataTableType:create_IoCucumberDatatableDataTableType_initWithIOSClass_withIoCucumberDatatableTableCellTransformer_(JavaLangFloat_class_(), create_IoCucumberDatatableDataTableTypeRegistry_7_initWithIoCucumberDatatableNumberParser_(numberParser))];
  [self defineDataTableTypeWithIoCucumberDatatableDataTableType:create_IoCucumberDatatableDataTableType_initWithIOSClass_withIoCucumberDatatableTableCellTransformer_(JavaLangDouble_class_(), create_IoCucumberDatatableDataTableTypeRegistry_8_initWithIoCucumberDatatableNumberParser_(numberParser))];
  [self defineDataTableTypeWithIoCucumberDatatableDataTableType:create_IoCucumberDatatableDataTableType_initWithIOSClass_withIoCucumberDatatableTableCellTransformer_(NSString_class_(), create_IoCucumberDatatableDataTableTypeRegistry_9_init())];
}

IoCucumberDatatableDataTableTypeRegistry *new_IoCucumberDatatableDataTableTypeRegistry_initWithJavaUtilLocale_(JavaUtilLocale *locale) {
  J2OBJC_NEW_IMPL(IoCucumberDatatableDataTableTypeRegistry, initWithJavaUtilLocale_, locale)
}

IoCucumberDatatableDataTableTypeRegistry *create_IoCucumberDatatableDataTableTypeRegistry_initWithJavaUtilLocale_(JavaUtilLocale *locale) {
  J2OBJC_CREATE_IMPL(IoCucumberDatatableDataTableTypeRegistry, initWithJavaUtilLocale_, locale)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoCucumberDatatableDataTableTypeRegistry)

@implementation IoCucumberDatatableDataTableTypeRegistry_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  IoCucumberDatatableDataTableTypeRegistry_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaMathBigInteger *)transformWithNSString:(NSString *)cell {
  return create_JavaMathBigInteger_initWithNSString_(cell);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(transformWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "transform", "LNSString;", "LIoCucumberDatatableDataTableTypeRegistry;", "initWithJavaUtilLocale:", "Ljava/lang/Object;Lio/cucumber/datatable/TableCellTransformer<Ljava/math/BigInteger;>;" };
  static const J2ObjcClassInfo _IoCucumberDatatableDataTableTypeRegistry_1 = { "", "io.cucumber.datatable", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_IoCucumberDatatableDataTableTypeRegistry_1;
}

@end

void IoCucumberDatatableDataTableTypeRegistry_1_init(IoCucumberDatatableDataTableTypeRegistry_1 *self) {
  NSObject_init(self);
}

IoCucumberDatatableDataTableTypeRegistry_1 *new_IoCucumberDatatableDataTableTypeRegistry_1_init() {
  J2OBJC_NEW_IMPL(IoCucumberDatatableDataTableTypeRegistry_1, init)
}

IoCucumberDatatableDataTableTypeRegistry_1 *create_IoCucumberDatatableDataTableTypeRegistry_1_init() {
  J2OBJC_CREATE_IMPL(IoCucumberDatatableDataTableTypeRegistry_1, init)
}

@implementation IoCucumberDatatableDataTableTypeRegistry_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  IoCucumberDatatableDataTableTypeRegistry_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaMathBigDecimal *)transformWithNSString:(NSString *)cell {
  return create_JavaMathBigDecimal_initWithNSString_(cell);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigDecimal;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(transformWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "transform", "LNSString;", "LIoCucumberDatatableDataTableTypeRegistry;", "initWithJavaUtilLocale:", "Ljava/lang/Object;Lio/cucumber/datatable/TableCellTransformer<Ljava/math/BigDecimal;>;" };
  static const J2ObjcClassInfo _IoCucumberDatatableDataTableTypeRegistry_2 = { "", "io.cucumber.datatable", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_IoCucumberDatatableDataTableTypeRegistry_2;
}

@end

void IoCucumberDatatableDataTableTypeRegistry_2_init(IoCucumberDatatableDataTableTypeRegistry_2 *self) {
  NSObject_init(self);
}

IoCucumberDatatableDataTableTypeRegistry_2 *new_IoCucumberDatatableDataTableTypeRegistry_2_init() {
  J2OBJC_NEW_IMPL(IoCucumberDatatableDataTableTypeRegistry_2, init)
}

IoCucumberDatatableDataTableTypeRegistry_2 *create_IoCucumberDatatableDataTableTypeRegistry_2_init() {
  J2OBJC_CREATE_IMPL(IoCucumberDatatableDataTableTypeRegistry_2, init)
}

@implementation IoCucumberDatatableDataTableTypeRegistry_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  IoCucumberDatatableDataTableTypeRegistry_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangByte *)transformWithNSString:(NSString *)cell {
  return JavaLangByte_decodeWithNSString_(cell);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangByte;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(transformWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "transform", "LNSString;", "LIoCucumberDatatableDataTableTypeRegistry;", "initWithJavaUtilLocale:", "Ljava/lang/Object;Lio/cucumber/datatable/TableCellTransformer<Ljava/lang/Byte;>;" };
  static const J2ObjcClassInfo _IoCucumberDatatableDataTableTypeRegistry_3 = { "", "io.cucumber.datatable", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_IoCucumberDatatableDataTableTypeRegistry_3;
}

@end

void IoCucumberDatatableDataTableTypeRegistry_3_init(IoCucumberDatatableDataTableTypeRegistry_3 *self) {
  NSObject_init(self);
}

IoCucumberDatatableDataTableTypeRegistry_3 *new_IoCucumberDatatableDataTableTypeRegistry_3_init() {
  J2OBJC_NEW_IMPL(IoCucumberDatatableDataTableTypeRegistry_3, init)
}

IoCucumberDatatableDataTableTypeRegistry_3 *create_IoCucumberDatatableDataTableTypeRegistry_3_init() {
  J2OBJC_CREATE_IMPL(IoCucumberDatatableDataTableTypeRegistry_3, init)
}

@implementation IoCucumberDatatableDataTableTypeRegistry_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  IoCucumberDatatableDataTableTypeRegistry_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangShort *)transformWithNSString:(NSString *)cell {
  return JavaLangShort_decodeWithNSString_(cell);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangShort;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(transformWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "transform", "LNSString;", "LIoCucumberDatatableDataTableTypeRegistry;", "initWithJavaUtilLocale:", "Ljava/lang/Object;Lio/cucumber/datatable/TableCellTransformer<Ljava/lang/Short;>;" };
  static const J2ObjcClassInfo _IoCucumberDatatableDataTableTypeRegistry_4 = { "", "io.cucumber.datatable", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_IoCucumberDatatableDataTableTypeRegistry_4;
}

@end

void IoCucumberDatatableDataTableTypeRegistry_4_init(IoCucumberDatatableDataTableTypeRegistry_4 *self) {
  NSObject_init(self);
}

IoCucumberDatatableDataTableTypeRegistry_4 *new_IoCucumberDatatableDataTableTypeRegistry_4_init() {
  J2OBJC_NEW_IMPL(IoCucumberDatatableDataTableTypeRegistry_4, init)
}

IoCucumberDatatableDataTableTypeRegistry_4 *create_IoCucumberDatatableDataTableTypeRegistry_4_init() {
  J2OBJC_CREATE_IMPL(IoCucumberDatatableDataTableTypeRegistry_4, init)
}

@implementation IoCucumberDatatableDataTableTypeRegistry_5

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  IoCucumberDatatableDataTableTypeRegistry_5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangInteger *)transformWithNSString:(NSString *)cell {
  return JavaLangInteger_decodeWithNSString_(cell);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(transformWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "transform", "LNSString;", "LIoCucumberDatatableDataTableTypeRegistry;", "initWithJavaUtilLocale:", "Ljava/lang/Object;Lio/cucumber/datatable/TableCellTransformer<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _IoCucumberDatatableDataTableTypeRegistry_5 = { "", "io.cucumber.datatable", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_IoCucumberDatatableDataTableTypeRegistry_5;
}

@end

void IoCucumberDatatableDataTableTypeRegistry_5_init(IoCucumberDatatableDataTableTypeRegistry_5 *self) {
  NSObject_init(self);
}

IoCucumberDatatableDataTableTypeRegistry_5 *new_IoCucumberDatatableDataTableTypeRegistry_5_init() {
  J2OBJC_NEW_IMPL(IoCucumberDatatableDataTableTypeRegistry_5, init)
}

IoCucumberDatatableDataTableTypeRegistry_5 *create_IoCucumberDatatableDataTableTypeRegistry_5_init() {
  J2OBJC_CREATE_IMPL(IoCucumberDatatableDataTableTypeRegistry_5, init)
}

@implementation IoCucumberDatatableDataTableTypeRegistry_6

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  IoCucumberDatatableDataTableTypeRegistry_6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangLong *)transformWithNSString:(NSString *)cell {
  return JavaLangLong_decodeWithNSString_(cell);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(transformWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "transform", "LNSString;", "LIoCucumberDatatableDataTableTypeRegistry;", "initWithJavaUtilLocale:", "Ljava/lang/Object;Lio/cucumber/datatable/TableCellTransformer<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _IoCucumberDatatableDataTableTypeRegistry_6 = { "", "io.cucumber.datatable", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_IoCucumberDatatableDataTableTypeRegistry_6;
}

@end

void IoCucumberDatatableDataTableTypeRegistry_6_init(IoCucumberDatatableDataTableTypeRegistry_6 *self) {
  NSObject_init(self);
}

IoCucumberDatatableDataTableTypeRegistry_6 *new_IoCucumberDatatableDataTableTypeRegistry_6_init() {
  J2OBJC_NEW_IMPL(IoCucumberDatatableDataTableTypeRegistry_6, init)
}

IoCucumberDatatableDataTableTypeRegistry_6 *create_IoCucumberDatatableDataTableTypeRegistry_6_init() {
  J2OBJC_CREATE_IMPL(IoCucumberDatatableDataTableTypeRegistry_6, init)
}

@implementation IoCucumberDatatableDataTableTypeRegistry_7

- (instancetype __nonnull)initWithIoCucumberDatatableNumberParser:(IoCucumberDatatableNumberParser *)capture$0 {
  IoCucumberDatatableDataTableTypeRegistry_7_initWithIoCucumberDatatableNumberParser_(self, capture$0);
  return self;
}

- (JavaLangFloat *)transformWithNSString:(NSString *)cell {
  return JavaLangFloat_valueOfWithFloat_([((IoCucumberDatatableNumberParser *) nil_chk(val$numberParser_)) parseFloatWithNSString:cell]);
}

- (void)dealloc {
  RELEASE_(val$numberParser_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangFloat;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIoCucumberDatatableNumberParser:);
  methods[1].selector = @selector(transformWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$numberParser_", "LIoCucumberDatatableNumberParser;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "transform", "LNSString;", "LIoCucumberDatatableDataTableTypeRegistry;", "initWithJavaUtilLocale:", "Ljava/lang/Object;Lio/cucumber/datatable/TableCellTransformer<Ljava/lang/Float;>;" };
  static const J2ObjcClassInfo _IoCucumberDatatableDataTableTypeRegistry_7 = { "", "io.cucumber.datatable", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, 4, -1 };
  return &_IoCucumberDatatableDataTableTypeRegistry_7;
}

@end

void IoCucumberDatatableDataTableTypeRegistry_7_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableDataTableTypeRegistry_7 *self, IoCucumberDatatableNumberParser *capture$0) {
  JreStrongAssign(&self->val$numberParser_, capture$0);
  NSObject_init(self);
}

IoCucumberDatatableDataTableTypeRegistry_7 *new_IoCucumberDatatableDataTableTypeRegistry_7_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableNumberParser *capture$0) {
  J2OBJC_NEW_IMPL(IoCucumberDatatableDataTableTypeRegistry_7, initWithIoCucumberDatatableNumberParser_, capture$0)
}

IoCucumberDatatableDataTableTypeRegistry_7 *create_IoCucumberDatatableDataTableTypeRegistry_7_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableNumberParser *capture$0) {
  J2OBJC_CREATE_IMPL(IoCucumberDatatableDataTableTypeRegistry_7, initWithIoCucumberDatatableNumberParser_, capture$0)
}

@implementation IoCucumberDatatableDataTableTypeRegistry_8

- (instancetype __nonnull)initWithIoCucumberDatatableNumberParser:(IoCucumberDatatableNumberParser *)capture$0 {
  IoCucumberDatatableDataTableTypeRegistry_8_initWithIoCucumberDatatableNumberParser_(self, capture$0);
  return self;
}

- (JavaLangDouble *)transformWithNSString:(NSString *)cell {
  return JavaLangDouble_valueOfWithDouble_([((IoCucumberDatatableNumberParser *) nil_chk(val$numberParser_)) parseDoubleWithNSString:cell]);
}

- (void)dealloc {
  RELEASE_(val$numberParser_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangDouble;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIoCucumberDatatableNumberParser:);
  methods[1].selector = @selector(transformWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$numberParser_", "LIoCucumberDatatableNumberParser;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "transform", "LNSString;", "LIoCucumberDatatableDataTableTypeRegistry;", "initWithJavaUtilLocale:", "Ljava/lang/Object;Lio/cucumber/datatable/TableCellTransformer<Ljava/lang/Double;>;" };
  static const J2ObjcClassInfo _IoCucumberDatatableDataTableTypeRegistry_8 = { "", "io.cucumber.datatable", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, 4, -1 };
  return &_IoCucumberDatatableDataTableTypeRegistry_8;
}

@end

void IoCucumberDatatableDataTableTypeRegistry_8_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableDataTableTypeRegistry_8 *self, IoCucumberDatatableNumberParser *capture$0) {
  JreStrongAssign(&self->val$numberParser_, capture$0);
  NSObject_init(self);
}

IoCucumberDatatableDataTableTypeRegistry_8 *new_IoCucumberDatatableDataTableTypeRegistry_8_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableNumberParser *capture$0) {
  J2OBJC_NEW_IMPL(IoCucumberDatatableDataTableTypeRegistry_8, initWithIoCucumberDatatableNumberParser_, capture$0)
}

IoCucumberDatatableDataTableTypeRegistry_8 *create_IoCucumberDatatableDataTableTypeRegistry_8_initWithIoCucumberDatatableNumberParser_(IoCucumberDatatableNumberParser *capture$0) {
  J2OBJC_CREATE_IMPL(IoCucumberDatatableDataTableTypeRegistry_8, initWithIoCucumberDatatableNumberParser_, capture$0)
}

@implementation IoCucumberDatatableDataTableTypeRegistry_9

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  IoCucumberDatatableDataTableTypeRegistry_9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)transformWithNSString:(NSString *)cell {
  return cell;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(transformWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "transform", "LNSString;", "LIoCucumberDatatableDataTableTypeRegistry;", "initWithJavaUtilLocale:", "Ljava/lang/Object;Lio/cucumber/datatable/TableCellTransformer<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _IoCucumberDatatableDataTableTypeRegistry_9 = { "", "io.cucumber.datatable", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_IoCucumberDatatableDataTableTypeRegistry_9;
}

@end

void IoCucumberDatatableDataTableTypeRegistry_9_init(IoCucumberDatatableDataTableTypeRegistry_9 *self) {
  NSObject_init(self);
}

IoCucumberDatatableDataTableTypeRegistry_9 *new_IoCucumberDatatableDataTableTypeRegistry_9_init() {
  J2OBJC_NEW_IMPL(IoCucumberDatatableDataTableTypeRegistry_9, init)
}

IoCucumberDatatableDataTableTypeRegistry_9 *create_IoCucumberDatatableDataTableTypeRegistry_9_init() {
  J2OBJC_CREATE_IMPL(IoCucumberDatatableDataTableTypeRegistry_9, init)
}
